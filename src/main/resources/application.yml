server:
  port: 9000

spring:
  application:
    name: springboot

  datasource:
    url: jdbc:mysql://localhost:3306/house?characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
    username: root
    password: dandy
    driver-class-name: com.mysql.jdbc.Driver
    #设置隔离级别为读写提交
    tomcat:
      default-transaction-isolation: 2

  redis:
    database: 0
    host: 192.168.206.128
    port: 6379
    password: 123456
    timeout: 1000
    jedis:
      pool:
        max-idle: 10
        max-active: 10
        max-wait: 2000
        min-idle: 5
  #配置redis缓存管理器(RedisCacheManager),第一种自定义redis缓存管理器的方法,第二种是通过配置类实现自定义
  #cache:
    #type: redis
    #cache-names: redisCache
    #redis:
      #禁用redis缓存前缀
      #use-key-prefix: false
      #允许保存空值
      #cache-null-values: true
      #自定义前缀
      #key-prefix:
      #定义超时时间
      #time-to-live: 600000
  rabbitmq:
    host: 114.116.182.128
    port: 5672
    username: admin
    password: 123456
    publisher-confirms: true #是否确认发送消息已经被成功消费,如果成功则会根据设置的类进行回调执行相关逻辑
    queue:
      msg: spring-boot-queue-msg
      user: spring-boot-queue-user


  servlet:
    multipart:
      #mvc指定上传文件的文件夹位置
      location: e:/springboot
      #mvc指定上传文件单个文件的最大值
      max-file-size: 5MB
      #mvc指定上传文件的所有文件大小的最大值
      max-request-size: 20MB

  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp

mybatis:
  #映射文件通配op
  mapper-locations: classpath:mapper/*.xml
  #扫描实体类的别名配置,与注解@Alias搭配使用
  type-aliases-package: com.laohu.springboot.mybatistran.pojo
  #typehandler扫描路径
  type-handlers-package: com.laohu.springboot.mybatistran.typehandler
  #mybatis配置文件路径
  #config-location: mybatis/mybatis-config.xml
  configuration:
    map-underscore-to-camel-case: true


#日志配置
logging:
  level:
    root: info
    org:
      springframework: info
      org:
        mybatis: debug

#参数配置
param:
  secret: uvwxyz
